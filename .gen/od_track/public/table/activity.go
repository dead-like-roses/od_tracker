//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Activity = newActivityTable("public", "activity", "")

type activityTable struct {
	postgres.Table

	// Columns
	DeviceID postgres.ColumnString
	PostedAt postgres.ColumnTimestampz
	App      postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ActivityTable struct {
	activityTable

	EXCLUDED activityTable
}

// AS creates new ActivityTable with assigned alias
func (a ActivityTable) AS(alias string) *ActivityTable {
	return newActivityTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ActivityTable with assigned schema name
func (a ActivityTable) FromSchema(schemaName string) *ActivityTable {
	return newActivityTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ActivityTable with assigned table prefix
func (a ActivityTable) WithPrefix(prefix string) *ActivityTable {
	return newActivityTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ActivityTable with assigned table suffix
func (a ActivityTable) WithSuffix(suffix string) *ActivityTable {
	return newActivityTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newActivityTable(schemaName, tableName, alias string) *ActivityTable {
	return &ActivityTable{
		activityTable: newActivityTableImpl(schemaName, tableName, alias),
		EXCLUDED:      newActivityTableImpl("", "excluded", ""),
	}
}

func newActivityTableImpl(schemaName, tableName, alias string) activityTable {
	var (
		DeviceIDColumn = postgres.StringColumn("device_id")
		PostedAtColumn = postgres.TimestampzColumn("posted_at")
		AppColumn      = postgres.StringColumn("app")
		allColumns     = postgres.ColumnList{DeviceIDColumn, PostedAtColumn, AppColumn}
		mutableColumns = postgres.ColumnList{DeviceIDColumn, PostedAtColumn, AppColumn}
	)

	return activityTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		DeviceID: DeviceIDColumn,
		PostedAt: PostedAtColumn,
		App:      AppColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
